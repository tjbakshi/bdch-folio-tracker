# File: .github/workflows/deploy.yml
name: Build & Deploy to Vercel

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: 18.x

    steps:
      # 1) Checkout your code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2) Install & build your frontend
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build Vite application
        run: |
          npm run build
          cp public/openapi.yaml dist/
          cp public/docs.html dist/
        env:
          # VITE_‑prefixed vars are required for Vite at build time
          VITE_SUPABASE_URL:      ${{ secrets.SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

      # 3) Deploy your Supabase Edge Functions
      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Deploy Supabase Edge Functions
        run: |
          supabase login --token="${{ secrets.SUPABASE_ACCESS_TOKEN }}"
          supabase functions deploy sec-extractor --project-ref="${{ secrets.SUPABASE_PROJECT_REF }}"
          supabase functions deploy bdc-api        --project-ref="${{ secrets.SUPABASE_PROJECT_REF }}"

      # 4) Deploy your front‑end to Vercel
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token:      ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id:     ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args:       '--prod'
          working-directory: .
